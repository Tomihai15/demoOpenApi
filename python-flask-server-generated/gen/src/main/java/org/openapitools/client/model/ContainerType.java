/*
 * Beverage E-commerce API
 * API for managing beverages, labels, ingredients, container types, and unit measures in a beverage e-commerce platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;

/**
 * ContainerType
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-30T11:51:08.794084+02:00[Europe/Bucharest]")
public class ContainerType {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private UUID id;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_VOLUME = "volume";
  @SerializedName(SERIALIZED_NAME_VOLUME)
  private Integer volume;


  public ContainerType id(UUID id) {
    
    this.id = id;
    return this;
  }

   /**
   * Unique identifier for the container type.
   * @return id
  **/
  @ApiModelProperty(required = true, value = "Unique identifier for the container type.")

  public UUID getId() {
    return id;
  }


  public void setId(UUID id) {
    this.id = id;
  }


  public ContainerType type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Type of container (e.g., Bottle, Can).
   * @return type
  **/
  @ApiModelProperty(required = true, value = "Type of container (e.g., Bottle, Can).")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public ContainerType volume(Integer volume) {
    
    this.volume = volume;
    return this;
  }

   /**
   * Volume in milliliters.
   * @return volume
  **/
  @ApiModelProperty(required = true, value = "Volume in milliliters.")

  public Integer getVolume() {
    return volume;
  }


  public void setVolume(Integer volume) {
    this.volume = volume;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContainerType containerType = (ContainerType) o;
    return Objects.equals(this.id, containerType.id) &&
        Objects.equals(this.type, containerType.type) &&
        Objects.equals(this.volume, containerType.volume);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, volume);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContainerType {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    volume: ").append(toIndentedString(volume)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


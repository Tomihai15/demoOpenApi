/*
 * Beverage E-commerce API
 * API for managing beverages, labels, ingredients, container types, and unit measures in a beverage e-commerce platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

/**
 * BeveragesIdBody1
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-30T11:51:08.794084+02:00[Europe/Bucharest]")
public class BeveragesIdBody1 {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_BRAND_ID = "brandId";
  @SerializedName(SERIALIZED_NAME_BRAND_ID)
  private UUID brandId;

  public static final String SERIALIZED_NAME_LABEL_ID = "labelId";
  @SerializedName(SERIALIZED_NAME_LABEL_ID)
  private UUID labelId;

  public static final String SERIALIZED_NAME_CONTAINER_TYPE_ID = "containerTypeId";
  @SerializedName(SERIALIZED_NAME_CONTAINER_TYPE_ID)
  private UUID containerTypeId;

  public static final String SERIALIZED_NAME_INGREDIENTS = "ingredients";
  @SerializedName(SERIALIZED_NAME_INGREDIENTS)
  private List<UUID> ingredients = null;


  public BeveragesIdBody1 description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public BeveragesIdBody1 brandId(UUID brandId) {
    
    this.brandId = brandId;
    return this;
  }

   /**
   * Get brandId
   * @return brandId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getBrandId() {
    return brandId;
  }


  public void setBrandId(UUID brandId) {
    this.brandId = brandId;
  }


  public BeveragesIdBody1 labelId(UUID labelId) {
    
    this.labelId = labelId;
    return this;
  }

   /**
   * Get labelId
   * @return labelId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getLabelId() {
    return labelId;
  }


  public void setLabelId(UUID labelId) {
    this.labelId = labelId;
  }


  public BeveragesIdBody1 containerTypeId(UUID containerTypeId) {
    
    this.containerTypeId = containerTypeId;
    return this;
  }

   /**
   * Get containerTypeId
   * @return containerTypeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getContainerTypeId() {
    return containerTypeId;
  }


  public void setContainerTypeId(UUID containerTypeId) {
    this.containerTypeId = containerTypeId;
  }


  public BeveragesIdBody1 ingredients(List<UUID> ingredients) {
    
    this.ingredients = ingredients;
    return this;
  }

  public BeveragesIdBody1 addIngredientsItem(UUID ingredientsItem) {
    if (this.ingredients == null) {
      this.ingredients = new ArrayList<UUID>();
    }
    this.ingredients.add(ingredientsItem);
    return this;
  }

   /**
   * Get ingredients
   * @return ingredients
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<UUID> getIngredients() {
    return ingredients;
  }


  public void setIngredients(List<UUID> ingredients) {
    this.ingredients = ingredients;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BeveragesIdBody1 beveragesIdBody1 = (BeveragesIdBody1) o;
    return Objects.equals(this.description, beveragesIdBody1.description) &&
        Objects.equals(this.brandId, beveragesIdBody1.brandId) &&
        Objects.equals(this.labelId, beveragesIdBody1.labelId) &&
        Objects.equals(this.containerTypeId, beveragesIdBody1.containerTypeId) &&
        Objects.equals(this.ingredients, beveragesIdBody1.ingredients);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, brandId, labelId, containerTypeId, ingredients);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BeveragesIdBody1 {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    brandId: ").append(toIndentedString(brandId)).append("\n");
    sb.append("    labelId: ").append(toIndentedString(labelId)).append("\n");
    sb.append("    containerTypeId: ").append(toIndentedString(containerTypeId)).append("\n");
    sb.append("    ingredients: ").append(toIndentedString(ingredients)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


/*
 * Beverage E-commerce API
 * API for managing beverages, labels, ingredients, container types, and unit measures in a beverage e-commerce platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * PaginationLinks
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-30T11:51:08.794084+02:00[Europe/Bucharest]")
public class PaginationLinks {
  /**
   * Relationship type
   */
  @JsonAdapter(RelEnum.Adapter.class)
  public enum RelEnum {
    SELF("self"),
    
    NEXT("next"),
    
    PREV("prev"),
    
    FIRST("first"),
    
    LAST("last");

    private String value;

    RelEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RelEnum fromValue(String value) {
      for (RelEnum b : RelEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<RelEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RelEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RelEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return RelEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_REL = "rel";
  @SerializedName(SERIALIZED_NAME_REL)
  private RelEnum rel;

  public static final String SERIALIZED_NAME_HREF = "href";
  @SerializedName(SERIALIZED_NAME_HREF)
  private String href;


  public PaginationLinks rel(RelEnum rel) {
    
    this.rel = rel;
    return this;
  }

   /**
   * Relationship type
   * @return rel
  **/
  @ApiModelProperty(required = true, value = "Relationship type")

  public RelEnum getRel() {
    return rel;
  }


  public void setRel(RelEnum rel) {
    this.rel = rel;
  }


  public PaginationLinks href(String href) {
    
    this.href = href;
    return this;
  }

   /**
   * Hyperlink reference.
   * @return href
  **/
  @ApiModelProperty(required = true, value = "Hyperlink reference.")

  public String getHref() {
    return href;
  }


  public void setHref(String href) {
    this.href = href;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaginationLinks paginationLinks = (PaginationLinks) o;
    return Objects.equals(this.rel, paginationLinks.rel) &&
        Objects.equals(this.href, paginationLinks.href);
  }

  @Override
  public int hashCode() {
    return Objects.hash(rel, href);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaginationLinks {\n");
    sb.append("    rel: ").append(toIndentedString(rel)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


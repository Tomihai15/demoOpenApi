/*
 * Beverage E-commerce API
 * API for managing beverages, labels, ingredients, container types, and unit measures in a beverage e-commerce platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ContainerType;
import org.openapitools.client.model.ContainertypesBody;
import org.openapitools.client.model.ContainertypesIdBody;
import org.openapitools.client.model.ContainertypesIdBody1;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.InlineResponse2001;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ContainerTypeApi
 */
@Ignore
public class ContainerTypeApiTest {

    private final ContainerTypeApi api = new ContainerTypeApi();

    
    /**
     * Create a new container type
     *
     * Creates a new container type.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createContainerTypeTest() throws ApiException {
        ContainertypesBody containertypesBody = null;
        api.createContainerType(containertypesBody);

        // TODO: test validations
    }
    
    /**
     * Delete a container type
     *
     * Deletes a container type.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteContainerTypeTest() throws ApiException {
        UUID id = null;
        api.deleteContainerType(id);

        // TODO: test validations
    }
    
    /**
     * Retrieve a container type by ID
     *
     * Retrieves details of a specific container type.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getContainerTypeByIdTest() throws ApiException {
        UUID id = null;
        ContainerType response = api.getContainerTypeById(id);

        // TODO: test validations
    }
    
    /**
     * Retrieve all container types
     *
     * Retrieves a list of all container types.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getContainerTypesTest() throws ApiException {
        List<ContainerType> response = api.getContainerTypes();

        // TODO: test validations
    }
    
    /**
     * Update a container type
     *
     * Create or replace a container type.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void putContainerTypeTest() throws ApiException {
        UUID id = null;
        ContainertypesIdBody containertypesIdBody = null;
        InlineResponse2001 response = api.putContainerType(id, containertypesIdBody);

        // TODO: test validations
    }
    
    /**
     * Update a container type
     *
     * Updates an existing container type.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateContainerTypeTest() throws ApiException {
        UUID id = null;
        ContainertypesIdBody1 containertypesIdBody1 = null;
        InlineResponse2001 response = api.updateContainerType(id, containertypesIdBody1);

        // TODO: test validations
    }
    
}

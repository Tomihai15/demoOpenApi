/*
 * Beverage E-commerce API
 * API for managing beverages, labels, ingredients, container types, and unit measures in a beverage e-commerce platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.Ingredient;
import org.openapitools.client.model.IngredientsBody;
import org.openapitools.client.model.IngredientsIdBody;
import org.openapitools.client.model.IngredientsIdBody1;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for IngredientApi
 */
@Ignore
public class IngredientApiTest {

    private final IngredientApi api = new IngredientApi();

    
    /**
     * Create a new ingredient
     *
     * Creates a new ingredient.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createIngredientTest() throws ApiException {
        IngredientsBody ingredientsBody = null;
        api.createIngredient(ingredientsBody);

        // TODO: test validations
    }
    
    /**
     * Delete an ingredient
     *
     * Deletes an ingredient.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteIngredientTest() throws ApiException {
        UUID id = null;
        api.deleteIngredient(id);

        // TODO: test validations
    }
    
    /**
     * Retrieve an ingredient by ID
     *
     * Retrieves details of a specific ingredient.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getIngredientByIdTest() throws ApiException {
        UUID id = null;
        Ingredient response = api.getIngredientById(id);

        // TODO: test validations
    }
    
    /**
     * Retrieve all ingredients
     *
     * Retrieves a list of all ingredients.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getIngredientsTest() throws ApiException {
        List<Ingredient> response = api.getIngredients();

        // TODO: test validations
    }
    
    /**
     * Update an ingredient
     *
     * Create or Replace an existing ingredient.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceIngredientTest() throws ApiException {
        UUID id = null;
        IngredientsIdBody ingredientsIdBody = null;
        api.replaceIngredient(id, ingredientsIdBody);

        // TODO: test validations
    }
    
    /**
     * Update an ingredient
     *
     * Updates an existing ingredient.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateIngredientTest() throws ApiException {
        UUID id = null;
        IngredientsIdBody1 ingredientsIdBody1 = null;
        api.updateIngredient(id, ingredientsIdBody1);

        // TODO: test validations
    }
    
}

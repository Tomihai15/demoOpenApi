openapi: 3.0.0
info:
  description: API for managing beverages, labels, ingredients, container types, and
    unit measures in a beverage e-commerce platform.
  title: Beverage E-commerce API
  version: 1.0.0
servers:
- url: https://api.beverage-ecommerce.com/v2
security:
- BearerAuth:
  - read:beverages
  - write:beverages
  - read:brands
  - write:brands
  - read:labels
  - write:labels
  - read:ingredients
  - write:ingredients
  - read:container-types
  - write:container-types
tags:
- description: Operations related to beverages
  name: beverage
- description: Operations related to labels
  name: label
- description: Operations related to brands
  name: brand
- description: Operations related to container types
  name: container-type
- description: Operations related to ingredients
  name: ingredient
paths:
  /beverages:
    get:
      description: Retrieves a list of all beverages.
      operationId: get_beverages
      parameters:
      - description: Page number.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      - description: Number of items per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 10
          maximum: 50
          minimum: 5
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: A list of beverages.
        "204":
          description: No beverages found.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication failed.
      security:
      - BearerAuth:
        - read:beverages
      summary: Retrieve all beverages
      tags:
      - beverage
      x-openapi-router-controller: swagger_server.controllers.beverage_controller
      x-accepts: application/json
    post:
      description: Creates a new beverage.
      operationId: create_beverage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/beverages_body'
        required: true
      responses:
        "201":
          description: Beverage created successfully.
          headers:
            Location:
              description: URL to the newly created beverage.
              explode: false
              schema:
                format: uri
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Access forbidden.
      security:
      - BearerAuth:
        - write:beverages
      summary: Create a new beverage
      tags:
      - beverage
      x-openapi-router-controller: swagger_server.controllers.beverage_controller
      x-contentType: application/json
      x-accepts: application/json
  /beverages/{id}:
    delete:
      description: Deletes a beverage.
      operationId: delete_beverage
      parameters:
      - description: Unique identifier for the beverage.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Beverage deleted successfully.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Resource not found.
      security:
      - BearerAuth:
        - write:beverages
        - read:beverages
      summary: Delete a beverage
      tags:
      - beverage
      x-openapi-router-controller: swagger_server.controllers.beverage_controller
      x-accepts: application/json
    get:
      description: Retrieves details of a specific beverage.
      operationId: get_beverage_by_id
      parameters:
      - description: Unique identifier for the beverage.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Beverage'
          description: Beverage details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Resource not found.
      security:
      - BearerAuth:
        - read:beverages
      summary: Retrieve a beverage by ID
      tags:
      - beverage
      x-openapi-router-controller: swagger_server.controllers.beverage_controller
      x-accepts: application/json
    patch:
      description: Update an existing beverage.
      operationId: update_beverage
      parameters:
      - description: Unique identifier for the beverage.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/beverages_id_body_1'
        required: true
      responses:
        "200":
          description: Beverage updated successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Resource not found.
      security:
      - BearerAuth:
        - write:beverages
        - read:beverages
      summary: Partially update a beverage
      tags:
      - beverage
      x-openapi-router-controller: swagger_server.controllers.beverage_controller
      x-contentType: application/json
      x-accepts: application/json
    put:
      description: Create or Replace an existing beverage.
      operationId: replace_beverage
      parameters:
      - description: Unique identifier for the beverage.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/beverages_id_body'
        required: true
      responses:
        "200":
          description: Beverage updated successfully.
        "201":
          description: Beverage created successfully.
          headers:
            Location:
              description: URL to the newly created beverage.
              explode: false
              schema:
                format: uri
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Resource not found.
      security:
      - BearerAuth:
        - write:beverages
        - read:beverages
      summary: Update a beverage
      tags:
      - beverage
      x-openapi-router-controller: swagger_server.controllers.beverage_controller
      x-contentType: application/json
      x-accepts: application/json
  /beverages/{id}/labels:
    get:
      description: Retrieves a list of all labels.
      operationId: get_labels
      parameters:
      - description: Unique identifier for the beverages.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Label'
                type: array
                x-content-type: application/json
          description: A list of labels.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Resource not found.
      security:
      - BearerAuth:
        - read:labels
      summary: Retrieve all labels
      tags:
      - label
      x-openapi-router-controller: swagger_server.controllers.label_controller
      x-accepts: application/json
    post:
      description: Creates a new label.
      operationId: create_label
      parameters:
      - description: Unique identifier for the beverages.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/id_labels_body'
        required: true
      responses:
        "201":
          description: Label created successfully.
          headers:
            Location:
              description: URL to the newly created label.
              explode: false
              schema:
                format: uri
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Access forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Resource not found.
      security:
      - BearerAuth:
        - write:labels
        - read:labels
      summary: Create a new label
      tags:
      - label
      x-openapi-router-controller: swagger_server.controllers.label_controller
      x-contentType: application/json
      x-accepts: application/json
  /beverages/{beverageId}/labels/{id}:
    delete:
      description: Deletes a label.
      operationId: delete_label
      parameters:
      - description: Unique identifier for the beverage.
        explode: false
        in: path
        name: beverageId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Unique identifier for the label.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Label deleted successfully.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Access forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Resource not found.
      security:
      - BearerAuth:
        - write:labels
        - read:labels
      summary: Delete a label
      tags:
      - label
      x-openapi-router-controller: swagger_server.controllers.label_controller
      x-accepts: application/json
    get:
      description: Retrieves details of a specific label.
      operationId: get_label_by_id
      parameters:
      - description: Unique identifier for the beverage.
        explode: false
        in: path
        name: beverageId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Unique identifier for the label.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
          description: Label details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Resource not found.
      security:
      - BearerAuth:
        - read:labels
      summary: Retrieve a label by ID and beverage ID
      tags:
      - label
      x-openapi-router-controller: swagger_server.controllers.label_controller
      x-accepts: application/json
    patch:
      description: Update existing label.
      operationId: update_label
      parameters:
      - description: Unique identifier for the beverage.
        explode: false
        in: path
        name: beverageId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Unique identifier for the label.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/labels_id_body_1'
        required: true
      responses:
        "200":
          description: Label updated successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Access forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Resource not found.
      security:
      - BearerAuth:
        - write:labels
        - read:labels
      summary: Partially update a label
      tags:
      - label
      x-openapi-router-controller: swagger_server.controllers.label_controller
      x-contentType: application/json
      x-accepts: application/json
    put:
      description: Create or Replace an existing label.
      operationId: replace_label
      parameters:
      - description: Unique identifier for the beverage.
        explode: false
        in: path
        name: beverageId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Unique identifier for the label.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/labels_id_body'
        required: true
      responses:
        "200":
          description: Label updated successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Access forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Resource not found.
      security:
      - BearerAuth:
        - write:labels
        - read:labels
      summary: Update a label
      tags:
      - label
      x-openapi-router-controller: swagger_server.controllers.label_controller
      x-contentType: application/json
      x-accepts: application/json
  /brands:
    get:
      description: Retrieves a list of all brands.
      operationId: get_brands
      parameters:
      - description: Page number.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      - description: Number of items per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 10
          maximum: 50
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Brand'
                type: array
                x-content-type: application/json
          description: A list of brands.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication failed.
      security:
      - BearerAuth:
        - read:brands
      summary: Retrieve all brand
      tags:
      - brand
      x-openapi-router-controller: swagger_server.controllers.brand_controller
      x-accepts: application/json
    post:
      description: Creates a new brand.
      operationId: create_brand
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/brands_body'
        required: true
      responses:
        "201":
          description: Brand created successfully.
          headers:
            Location:
              description: URL to the newly created brand.
              explode: false
              schema:
                format: uri
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Access forbidden.
      security:
      - BearerAuth:
        - write:brands
        - read:brands
      summary: Create a new brand
      tags:
      - brand
      x-openapi-router-controller: swagger_server.controllers.brand_controller
      x-contentType: application/json
      x-accepts: application/json
  /brands/{id}:
    delete:
      description: Deletes a brand.
      operationId: delete_brand
      parameters:
      - description: Unique identifier for the brand.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Brand deleted successfully.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Access forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Resource not found.
      security:
      - BearerAuth:
        - write:brands
        - read:brands
      summary: Delete a brand
      tags:
      - brand
      x-openapi-router-controller: swagger_server.controllers.brand_controller
      x-accepts: application/json
    get:
      description: Retrieves details of a specific brand.
      operationId: get_brand_by_id
      parameters:
      - description: Unique identifier for the brand.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
          description: Brand details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Resource not found.
      security:
      - BearerAuth:
        - read:brands
      summary: Retrieve a brand by ID
      tags:
      - brand
      x-openapi-router-controller: swagger_server.controllers.brand_controller
      x-accepts: application/json
    patch:
      description: Update an existing brand.
      operationId: update_brand
      parameters:
      - description: Unique identifier for the brand.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/brands_id_body_1'
        required: true
      responses:
        "200":
          description: Brand updated successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Access forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Resource not found.
      security:
      - BearerAuth:
        - write:brands
        - read:brands
      summary: Partially update a brand
      tags:
      - brand
      x-openapi-router-controller: swagger_server.controllers.brand_controller
      x-contentType: application/json
      x-accepts: application/json
    put:
      description: Create or replace an existing brand.
      operationId: replace_brand
      parameters:
      - description: Unique identifier for the brand.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/brands_id_body'
        required: true
      responses:
        "200":
          description: Brand updated successfully.
        "201":
          description: Brand created successfully.
          headers:
            Location:
              description: URL to the newly created brand.
              explode: false
              schema:
                format: uri
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Access forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Resource not found.
      security:
      - BearerAuth:
        - write:brands
        - read:brands
      summary: Update a brand
      tags:
      - brand
      x-openapi-router-controller: swagger_server.controllers.brand_controller
      x-contentType: application/json
      x-accepts: application/json
  /ingredients:
    get:
      description: Retrieves a list of all ingredients.
      operationId: get_ingredients
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Ingredient'
                type: array
                x-content-type: application/json
          description: A list of ingredients.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication failed.
      security:
      - BearerAuth:
        - read:ingredients
      summary: Retrieve all ingredients
      tags:
      - ingredient
      x-openapi-router-controller: swagger_server.controllers.ingredient_controller
      x-accepts: application/json
    post:
      description: Creates a new ingredient.
      operationId: create_ingredient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ingredients_body'
        required: true
      responses:
        "201":
          description: Ingredient created successfully.
          headers:
            Location:
              description: URL to the newly created ingredient.
              explode: false
              schema:
                format: uri
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Access forbidden.
      security:
      - BearerAuth:
        - write:ingredients
        - read:ingredients
      summary: Create a new ingredient
      tags:
      - ingredient
      x-openapi-router-controller: swagger_server.controllers.ingredient_controller
      x-contentType: application/json
      x-accepts: application/json
  /ingredients/{id}:
    delete:
      description: Deletes an ingredient.
      operationId: delete_ingredient
      parameters:
      - description: Unique identifier for the ingredient.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Ingredient deleted successfully.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Access forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Resource not found.
      security:
      - BearerAuth:
        - write:ingredients
        - read:ingredients
      summary: Delete an ingredient
      tags:
      - ingredient
      x-openapi-router-controller: swagger_server.controllers.ingredient_controller
      x-accepts: application/json
    get:
      description: Retrieves details of a specific ingredient.
      operationId: get_ingredient_by_id
      parameters:
      - description: Unique identifier for the ingredient.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredient'
          description: Ingredient details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Resource not found.
      security:
      - BearerAuth:
        - read:ingredients
      summary: Retrieve an ingredient by ID
      tags:
      - ingredient
      x-openapi-router-controller: swagger_server.controllers.ingredient_controller
      x-accepts: application/json
    patch:
      description: Updates an existing ingredient.
      operationId: update_ingredient
      parameters:
      - description: Unique identifier for the ingredient.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ingredients_id_body_1'
        required: true
      responses:
        "200":
          description: Ingredient updated successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Access forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Resource not found.
      security:
      - BearerAuth:
        - write:ingredients
        - read:ingredients
      summary: Update an ingredient
      tags:
      - ingredient
      x-openapi-router-controller: swagger_server.controllers.ingredient_controller
      x-contentType: application/json
      x-accepts: application/json
    put:
      description: Create or Replace an existing ingredient.
      operationId: replace_ingredient
      parameters:
      - description: Unique identifier for the ingredient.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ingredients_id_body'
        required: true
      responses:
        "200":
          description: Ingredient updated successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Access forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Resource not found.
      security:
      - BearerAuth:
        - write:ingredients
        - read:ingredients
      summary: Update an ingredient
      tags:
      - ingredient
      x-openapi-router-controller: swagger_server.controllers.ingredient_controller
      x-contentType: application/json
      x-accepts: application/json
  /container-types:
    get:
      description: Retrieves a list of all container types.
      operationId: get_container_types
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ContainerType'
                type: array
                x-content-type: application/json
          description: A list of container types.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication failed.
      security:
      - BearerAuth:
        - read:container-types
      summary: Retrieve all container types
      tags:
      - container-type
      x-openapi-router-controller: swagger_server.controllers.container_type_controller
      x-accepts: application/json
    post:
      description: Creates a new container type.
      operationId: create_container_type
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/containertypes_body'
        required: true
      responses:
        "201":
          description: Container type created successfully.
          headers:
            Location:
              description: URL to the newly created container type.
              explode: false
              schema:
                format: uri
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Access forbidden.
      security:
      - BearerAuth:
        - write:container-types
        - read:container-types
      summary: Create a new container type
      tags:
      - container-type
      x-openapi-router-controller: swagger_server.controllers.container_type_controller
      x-contentType: application/json
      x-accepts: application/json
  /container-types/{id}:
    delete:
      description: Deletes a container type.
      operationId: delete_container_type
      parameters:
      - description: Unique identifier for the container type.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Container type deleted successfully.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Access forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Resource not found.
      security:
      - BearerAuth:
        - write:container-types
        - read:container-types
      summary: Delete a container type
      tags:
      - container-type
      x-openapi-router-controller: swagger_server.controllers.container_type_controller
      x-accepts: application/json
    get:
      description: Retrieves details of a specific container type.
      operationId: get_container_type_by_id
      parameters:
      - description: Unique identifier for the container type.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerType'
          description: Container type details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Resource not found.
      security:
      - BearerAuth:
        - read:container-types
      summary: Retrieve a container type by ID
      tags:
      - container-type
      x-openapi-router-controller: swagger_server.controllers.container_type_controller
      x-accepts: application/json
    patch:
      description: Updates an existing container type.
      operationId: update_container_type
      parameters:
      - description: Unique identifier for the container type.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/containertypes_id_body_1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
          description: Container type updated successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Access forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Resource not found.
      security:
      - BearerAuth:
        - write:container-types
        - read:container-types
      summary: Update a container type
      tags:
      - container-type
      x-openapi-router-controller: swagger_server.controllers.container_type_controller
      x-contentType: application/json
      x-accepts: application/json
    put:
      description: Create or replace a container type.
      operationId: put_container_type
      parameters:
      - description: Unique identifier for the container type.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/containertypes_id_body'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
          description: Container type updated successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Authentication failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Access forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Resource not found.
      security:
      - BearerAuth:
        - write:container-types
        - read:container-types
      summary: Update a container type
      tags:
      - container-type
      x-openapi-router-controller: swagger_server.controllers.container_type_controller
      x-contentType: application/json
      x-accepts: application/json
components:
  responses:
    UnauthorizedError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Authentication failed.
    BadRequestError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Invalid request.
    NotFoundError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Resource not found.
    ForbiddenError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Access forbidden.
  schemas:
    Beverage:
      example:
        labelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        containerTypeId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        brandId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        description: description
        ingredients:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          description: Unique identifier for the beverage.
          format: uuid
          type: string
        brandId:
          description: ID of the brand associated with the beverage
          format: uuid
          type: string
        description:
          description: Detailed description of the beverage.
          type: string
        labelId:
          description: Unique identifier of the associated label.
          format: uuid
          type: string
        containerTypeId:
          description: Unique identifier of the container type.
          format: uuid
          type: string
        ingredients:
          description: List of ingredient IDs.
          items:
            format: uuid
            type: string
          type: array
      required:
      - brandId
      - containerTypeId
      - id
      - labelId
      type: object
    Brand:
      example:
        brandName: brandName
        brandDescription: brandDescription
        brandId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        brandId:
          description: Unique identifier for the brand
          format: uuid
          type: string
        brandName:
          description: Name of the brand
          type: string
        brandDescription:
          description: Description of the brand
          type: string
      required:
      - brandId
      - brandName
      type: object
    Label:
      example:
        name: name
        description: description
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          description: Unique identifier for the label.
          format: uuid
          type: string
        name:
          description: Name of the label.
          type: string
        description:
          description: Detailed description of the label.
          type: string
      required:
      - id
      - name
      type: object
    Ingredient:
      example:
        name: name
        allergenInfo: allergenInfo
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          description: Unique identifier for the ingredient.
          format: uuid
          type: string
        name:
          description: Name of the ingredient.
          type: string
        allergenInfo:
          description: Allergen information.
          type: string
      required:
      - id
      - name
      type: object
    ContainerType:
      example:
        volume: 0
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: type
      properties:
        id:
          description: Unique identifier for the container type.
          format: uuid
          type: string
        type:
          description: Type of container (e.g., Bottle, Can).
          type: string
        volume:
          description: Volume in milliliters.
          type: integer
      required:
      - id
      - type
      - volume
      type: object
    PaginationLinks:
      example:
        rel: self
        href: href
      properties:
        rel:
          description: Relationship type
          enum:
          - self
          - next
          - prev
          - first
          - last
          type: string
        href:
          description: Hyperlink reference.
          type: string
      required:
      - href
      - rel
      type: object
    BeverageLinks:
      properties:
        rel:
          description: Relationship type
          enum:
          - self
          - labels
          - ingredients
          - containers
          type: string
        href:
          description: Hyperlink reference.
          type: string
      required:
      - href
      - rel
      type: object
    ErrorResponse:
      properties:
        error:
          $ref: '#/components/schemas/ErrorResponse_error'
      type: object
    inline_response_200:
      example:
        beverages:
        - labelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          containerTypeId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          brandId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          description: description
          ingredients:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - labelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          containerTypeId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          brandId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          description: description
          ingredients:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        links:
        - rel: self
          href: href
        - rel: self
          href: href
      properties:
        beverages:
          items:
            $ref: '#/components/schemas/Beverage'
          type: array
        links:
          items:
            $ref: '#/components/schemas/PaginationLinks'
          type: array
      type: object
    beverages_body:
      properties:
        description:
          type: string
        brandId:
          format: uuid
          type: string
        labelId:
          format: uuid
          type: string
        containerTypeId:
          format: uuid
          type: string
        ingredients:
          items:
            format: uuid
            type: string
          type: array
      required:
      - brandId
      - containerTypeId
      - labelId
      type: object
    beverages_id_body:
      properties:
        description:
          type: string
        brandId:
          format: uuid
          type: string
        labelId:
          format: uuid
          type: string
        containerTypeId:
          format: uuid
          type: string
        ingredients:
          items:
            format: uuid
            type: string
          type: array
      required:
      - brandId
      - containerTypeId
      - labelId
      type: object
    beverages_id_body_1:
      properties:
        description:
          type: string
        brandId:
          format: uuid
          type: string
        labelId:
          format: uuid
          type: string
        containerTypeId:
          format: uuid
          type: string
        ingredients:
          items:
            format: uuid
            type: string
          type: array
      type: object
    id_labels_body:
      properties:
        name:
          type: string
        description:
          type: string
      required:
      - name
      type: object
    labels_id_body:
      properties:
        name:
          type: string
        description:
          type: string
      type: object
    labels_id_body_1:
      properties:
        name:
          type: string
        description:
          type: string
      type: object
    brands_body:
      properties:
        name:
          type: string
        description:
          type: string
      required:
      - name
      type: object
    brands_id_body:
      properties:
        name:
          type: string
        description:
          type: string
      required:
      - name
      type: object
    brands_id_body_1:
      properties:
        name:
          type: string
        description:
          type: string
      type: object
    ingredients_body:
      properties:
        name:
          type: string
        allergen_info:
          type: string
      required:
      - name
      type: object
    ingredients_id_body:
      properties:
        name:
          type: string
        allergen_info:
          type: string
      type: object
    ingredients_id_body_1:
      properties:
        name:
          type: string
        allergen_info:
          type: string
      type: object
    containertypes_body:
      properties:
        type:
          type: string
        volume:
          format: float
          type: number
      required:
      - type
      - volume
      type: object
    containertypes_id_body:
      properties:
        type:
          type: string
        volume:
          format: float
          type: number
      required:
      - type
      - volume
      type: object
    inline_response_200_1:
      example:
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
      type: object
    containertypes_id_body_1:
      properties:
        type:
          type: string
        volume:
          format: float
          type: number
      type: object
    ErrorResponse_error:
      properties:
        code:
          description: HTTP status code.
          type: integer
        message:
          description: Error message.
          type: string
      required:
      - code
      - message
      type: object
  securitySchemes:
    BearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
      x-bearerInfoFunc: swagger_server.controllers.authorization_controller.check_BearerAuth

